syntax = 'proto3';
package Laana;

import 'entity/file.proto';
import 'entity/message.proto';

message OutgoingMessage {
  oneof content {
    LaanaMessage.Bubble bubble = 11;
    LaanaMessage.NormalFile file = 12;
    LaanaMessage.SingleImage singleImage = 13;
    LaanaMessage.MarketFace marketFace = 14;
    LaanaFile video = 15;
    LaanaFile voice = 16;
    // LinkCard linkCard = 17; - unable, needs signature
    // ContactCard contactCard = 18; - unable, needs signature
    LaanaMessage.MusicCard musicCard = 19;
    // LocationCard locationCard = 20; - unable, needs signature
    // ForwardMessageRef forwardMsgRef = 21; - unable, use packed messages instead
    // XmlMessage xmlMessage = 22;
    // JsonMessage jsonMessage = 23;
  }
}

message SendMessagePing {
  LaanaPeer targetPeer = 1;
  OutgoingMessage message = 2;
}

message SendMessagePong {
  string msgId = 1;
}

message GetMessagePing {
  string msgId = 1;
}

message GetMessagePong {
  LaanaMessage message = 1;
}

message GetMessagesPing {
  repeated string msgIds = 1;
}

message GetMessagesPong {
  repeated LaanaMessage messages = 1;
}

message GetHistoryMessagesPing {
  LaanaPeer targetPeer = 1;
  string lastMsgId = 2;
  uint32 count = 3;
}

message GetHistoryMessagesPong {
  repeated LaanaMessage messages = 1;
}

message WithdrawMessagePing {
  string msgId = 1;
}

message MarkPeerMessageAsReadPing {
  LaanaPeer peer = 1;
}

message ForwardMessagePing {
  enum Operation {
    AS_SINGLETONS = 0;
    AS_PACKED = 1;
  }

  Operation operation = 1;
  repeated string msgIds = 2;
  LaanaPeer targetPeer = 3;
}

message GetForwardedMessagesPing {
  string refId = 1;
}

message GetForwardedMessagesPong {
  LaanaMessage.ForwardMessage forwardMessage = 1;
}